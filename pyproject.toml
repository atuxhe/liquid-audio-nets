[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "liquid-audio-nets"
version = "0.1.0"
description = "Edge-efficient Liquid Neural Network models for always-on audio sensing"
authors = [
    {name = "Daniel Schmidt", email = "daniel@terragon.dev"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["machine-learning", "audio", "embedded", "neural-networks", "edge-ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Embedded Systems",
]

dependencies = [
    "numpy>=1.21.0",
    "torch>=1.12.0",
    "torchaudio>=0.12.0",
    "scipy>=1.7.0",
    "librosa>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
training = [
    "pytorch-lightning>=1.8.0",
    "tensorboard>=2.10.0",
    "wandb>=0.13.0",
    "hydra-core>=1.2.0",
]
embedded = [
    "onnx>=1.12.0",
    "onnxruntime>=1.12.0",
    "tflite-model-maker>=0.4.0",
]

[project.urls]
Homepage = "https://github.com/terragon-labs/liquid-audio-nets"
Documentation = "https://liquid-audio-nets.readthedocs.io"
Repository = "https://github.com/terragon-labs/liquid-audio-nets"
"Bug Tracker" = "https://github.com/terragon-labs/liquid-audio-nets/issues"

[project.scripts]
liquid-profile = "liquid_audio_nets.tools.profiler:main"
liquid-compress = "liquid_audio_nets.tools.compression:main"

[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "python"
module-name = "liquid_audio_nets._core"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "embedded: marks tests requiring embedded hardware",
]

[tool.coverage.run]
source = ["liquid_audio_nets"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]