# Terragon Autonomous SDLC Configuration
# For liquid-audio-nets repository

version: "1.0"
repository:
  name: "liquid-audio-nets"
  type: "multi-language"
  domain: "edge-ai"
  maturity: "maturing"
  last_assessed: "2025-01-15T10:30:00Z"

# Scoring weights adapted for MATURING repository
scoring:
  weights:
    wsjf: 0.6          # Higher weight for business value
    ice: 0.1           # Lower weight for basic impact
    technicalDebt: 0.2 # Moderate technical debt focus
    security: 0.1      # Security baseline

  thresholds:
    minScore: 15.0      # Higher threshold for mature repo
    maxRisk: 0.7        # Lower risk tolerance
    securityBoost: 2.0  # Double security priority
    complianceBoost: 1.8

# Value discovery sources for this repository
discovery:
  sources:
    - gitHistory        # TODOs, FIXMEs in commits
    - staticAnalysis    # Code quality issues
    - issueTrackers     # GitHub issues
    - vulnerabilityDatabases # Security scans
    - performanceMonitoring  # Monitoring alerts
    - dependencyUpdates # Renovate/Dependabot

  tools:
    staticAnalysis:
      rust: ["clippy", "cargo-audit"]
      python: ["ruff", "mypy", "bandit"]
      cpp: ["clang-static-analyzer", "cppcheck"]
      general: ["sonarqube"]
      
    security:
      - "trivy"
      - "snyk"
      - "detect-secrets"
      - "safety"
      - "cargo-audit"
      
    performance:
      - "criterion"     # Rust benchmarks
      - "pytest-benchmark" # Python benchmarks
      - "google-benchmark" # C++ benchmarks

# Execution configuration
execution:
  maxConcurrentTasks: 1
  branchPrefix: "auto-value"
  
  testRequirements:
    minCoverage: 80
    performanceRegression: 5  # Max 5% regression
    
  rollbackTriggers:
    - testFailure
    - buildFailure  
    - securityViolation
    - performanceRegression

# Repository-specific patterns
patterns:
  hotspots:
    - "python/liquid_audio_nets/"  # Python core
    - "src/"                       # Rust core
    - "tests/"                     # Test infrastructure
    
  ignore:
    - "target/"
    - "build/"
    - "__pycache__/"
    - ".git/"
    - "docs/_build/"

# Language-specific configurations
languages:
  rust:
    features: ["std", "embedded", "python"]
    testCommand: "cargo test --all-features"
    lintCommand: "cargo clippy --all-targets --all-features"
    
  python:
    versions: ["3.8", "3.9", "3.10", "3.11"]
    testCommand: "pytest tests/ -v --cov=liquid_audio_nets"
    lintCommand: "ruff check . && mypy python/"
    
  cpp:
    standard: "c++17"
    testCommand: "cd build && ctest --output-on-failure"
    lintCommand: "clang-format --dry-run --Werror src/**/*.{cpp,h}"

# Advanced features for MATURING repositories
advanced:
  enableSBOM: true
  enableCompliance: true
  enableAdvancedSecurity: true
  enablePerformanceTracking: true
  enableArchitecturalMetrics: true